"""
Django settings for vamsikrishna project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from corsheaders.defaults import default_headers
import dj_database_url


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#6p#pz(%pk68(3lg1+^hh90&ro8x*eazi7upof5n@!4v)ii0(t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False  # production False

if DEBUG:
    ALLOWED_HOSTS = ["localhost", "127.0.0.1"]
else:
    ALLOWED_HOSTS = [
        "vamsikrishna.site",
        "www.vamsikrishna.site",
        "blog.vamsikrishna.site",
        "www.blog.vamsikrishna.site",
        "vamsikrishna-site.onrender.com",
        "https://vamsi-blog-84xx2xkmr-vamsikrishnas-projects-6e5d2b0a.vercel.app/",
        "https://vamsi-blog.vercel.app/",
    ]

if DEBUG:
    # Development: Allow all origins for easier testing
    CORS_ALLOW_ALL_ORIGINS = True  
    CORS_ALLOWED_ORIGINS = [
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://192.168.38.234:3000",
    ]
else:
    # Production: Allow only specific domains
    CORS_ALLOW_ALL_ORIGINS = False  
    CORS_ALLOWED_ORIGINS = [
        "https://blog.vamsikrishna.site",
        "https://vamsikrishna.site",
        "https://vamsi-blog-84xx2xkmr-vamsikrishnas-projects-6e5d2b0a.vercel.app/",
        "https://vamsi-blog.vercel.app/",
    ]

# Allow additional headers
CORS_ALLOW_HEADERS = list(default_headers) + [
    "content-disposition",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'captcha',
    'django_recaptcha',
    'blog',
    'rest_framework', #api
    "corsheaders", # Media files for api
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware", # media files for api
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vamsikrishna.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vamsikrishna.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# DATABASES = {
#     'default': dj_database_url.config(default="postgresql://neondb_owner:npg_mfeMUXr40blK@ep-raspy-shape-a5ktfyv6-pooler.us-east-2.aws.neon.tech/vamsikrishna_site?sslmode=require")
# }


DATABASES = {
    'default': dj_database_url.config(
        default="postgresql://neondb_owner:npg_mfeMUXr40blK@ep-raspy-shape-a5ktfyv6-pooler.us-east-2.aws.neon.tech/vamsikrishna_site?sslmode=require",
        conn_max_age=600,  # Keep the connection open for 10 minutes
        ssl_require=True,  # Ensure SSL is enabled
    )
}

DATABASE_URL = "postgresql://neondb_owner:npg_mfeMUXr40blK@ep-raspy-shape-a5ktfyv6-pooler.us-east-2.aws.neon.tech/vamsikrishna_site?sslmode=require"

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'vamsikrishna_site',
#         'USER': 'neondb_owner',
#         'PASSWORD': 'npg_mfeMUXr40blK',
#         'HOST': 'ep-raspy-shape-a5ktfyv6-pooler.us-east-2.aws.neon.tech',
#         'PORT': '5432',
#         'CONN_MAX_AGE': 600, 
#         'OPTIONS': {
#             'sslmode': 'require',
#         },
#     }
# }





# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Static files (CSS, JavaScript, Images)
STATIC_URL = "/static/"  # Ensure STATIC_URL starts with "/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# This should only be used in development, NOT in production
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Media files (Uploaded images)
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# admin login url
LOGIN_URL = '/admin/'

# # gmail api setup
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'vamsikrishna.nagidi@gmail.com'
# EMAIL_HOST_PASSWORD = 'dhsm chzd aajm jcox'

#zoho api setup
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.zoho.in'  # Zoho India SMTP
EMAIL_PORT = 587  # Use 465 if using SSL
EMAIL_USE_TLS = True  # Set to False if using SSL
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'contact@vamsikrishna.site'  # Your Zoho email
EMAIL_HOST_PASSWORD = 'MKVEca9WUERn'  # Your Zoho App Password
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  # Default sender email


#Email Settings
if DEBUG:
    # Test reCAPTCHA keys (for development)
    RECAPTCHA_PUBLIC_KEY = "6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI"
    RECAPTCHA_PRIVATE_KEY = "6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe"
    SILENCED_SYSTEM_CHECKS = ["django_recaptcha.recaptcha_test_key_error"]
else:
    # Production reCAPTCHA keys (replace with your real keys)
    RECAPTCHA_PUBLIC_KEY = "6Lds4e0qAAAAAMo-hNW5n7ViSl29D6vZBmGJPKGj"
    RECAPTCHA_PRIVATE_KEY = "6Lds4e0qAAAAAEU5awIdxjQz1bPVZ80RBfe1PZnD"

RECAPTCHA_REQUIRED = True

#This will store optimized static files and serve them faster
STATICFILES_STORAGE = "django.contrib.staticfiles.storage.ManifestStaticFilesStorage"


#date and time 
TIME_ZONE = 'Asia/Kolkata'
USE_TZ = True 
